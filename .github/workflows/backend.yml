name: Build & Deploy Backend

on:
  push:
    branches: [ main ]           # run only for commits on main
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

env:
  ECR_REPO: my-cargo-backend     # name of your ECR repository
  IMAGE_TAG: ${{ github.sha }}   # use commit SHA as image tag

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # Login to ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push images
      - name: Build & push Docker image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPO
          
          # build with commitâ€‘SHA tag
          docker build -t $IMAGE_URI:$IMAGE_TAG backend
          
          # also tag as latest
          docker tag $IMAGE_URI:$IMAGE_TAG $IMAGE_URI:latest
          
          # push both tags
          docker push $IMAGE_URI:$IMAGE_TAG
          docker push $IMAGE_URI:latest

      # Deploy on EC2 via SSH
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user                 # or ubuntu, depending on AMI
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPO
            aws ecr get-login-password --region $REGION | \
            docker login --username AWS --password-stdin $ACCOUNT.dkr.ecr.$REGION.amazonaws.com
            docker pull $IMAGE_URI:$IMAGE_TAG
            docker pull $IMAGE_URI:latest
            docker-compose -f /docker-compose.yml up -d backend
